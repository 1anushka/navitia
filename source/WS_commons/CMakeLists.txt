FIND_PACKAGE(Boost 1.40.0 COMPONENTS thread REQUIRED)
link_directories ( ${Boost_LIBRARY_DIRS} )
include_directories (${Boost_INCLUDE_DIRS})
SET(LIBS ${Boost_LIBRARIES})

IF(FCGI)
  FIND_PACKAGE(fcgi REQUIRED)
  LIST(APPEND LIBS ${FCGI_LIBRARY})
  link_directories (${Boost_LIBRARY_DIRS} ${FCGI_LIBRARY_DIRS})
  include_directories (${Boost_INCLUDE_DIRS} ${FCGI_INCLUDE_DIRS})

  SET(FCGI_SOURCES fcgi.h isapi.h threadpool.h data_structures.h examples/fcgi.cpp)
  add_executable (fcgi_demo ${FCGI_SOURCES})
  target_link_libraries(fcgi_demo ${LIBS})
ENDIF(FCGI)

IF(FCGI)
    SET(BENCH_SOURCES fcgi.h isapi.h threadpool.h data_structures.h tests/benchs.cpp)
    add_executable (benchs ${BENCH_SOURCES})
    target_link_libraries(benchs ${LIBS})
ENDIF(FCGI)

IF(WIN32 AND ISAPI)
    SET(ISAPI_SOURCES fcgi.h isapi.h threadpool.h data_structures.h examples/isapi.cpp)
    add_library (isapi MODULE ${ISAPI_SOURCES})
ELSEIF(NOT WIN32 AND ISAPI)
    MESSAGE(FATAL_ERROR "pas d'isapi sous linux")
ENDIF(WIN32 AND ISAPI)
