MACRO(SET_WS_TYPE APP_NAME WS_TYPE WS_SOURCES WS_LIBS)
FIND_PACKAGE(Boost 1.40.0 COMPONENTS system thread REQUIRED)

IF(${WS_TYPE} MATCHES "FCGI")
  ADD_DEFINITIONS(-DWS_TYPE=1)
ELSEIF(${WS_TYPE} MATCHES "ISAPI")
  ADD_DEFINITIONS(-DWS_TYPE=2)
ELSEIF(${WS_TYPE} MATCHES "DUMMY")
  ADD_DEFINITIONS(-DWS_TYPE=3)
ELSE(${WS_TYPE} MATCHES "FCGI")
  MESSAGE(FATAL_ERROR "I don't recognize WebService format ${WS_TYPE}")
ENDIF(${WS_TYPE} MATCHES "FCGI")

MESSAGE(STATUS "Création d'un webservice du type: ${WS_TYPE}")

link_directories (${Boost_LIBRARY_DIRS})
include_directories (${Boost_INCLUDE_DIRS})
IF(${WS_TYPE} MATCHES "FCGI")
  FIND_PACKAGE(fcgi REQUIRED)
  link_directories (${FCGI_LIBRARY_DIRS})
  include_directories (${CMAKE_SOURCE_DIR}/WS_commons ${FCGI_INCLUDE_DIRS})
  add_executable(${APP_NAME} ${WS_SOURCES})
  target_link_libraries(${APP_NAME} ${WS_LIBS} ${FCGI_LIBRARY})
ELSEIF(${WS_TYPE} MATCHES "ISAPI")
  include_directories (${CMAKE_SOURCE_DIR}/WS_commons)
  add_library(${APP_NAME} ${WS_SOURCES})
  target_link_libraries(${APP_NAME} ${WS_LIBS})
ENDIF(${WS_TYPE} MATCHES "FCGI")

ENDMACRO(SET_WS_TYPE)